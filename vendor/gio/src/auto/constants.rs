// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use std::ffi::CStr;

#[cfg(any(feature = "v2_72", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_72")))]
#[doc(alias = "G_DEBUG_CONTROLLER_EXTENSION_POINT_NAME")]
pub static DEBUG_CONTROLLER_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_DEBUG_CONTROLLER_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_58", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_58")))]
#[doc(alias = "G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE")]
pub static DRIVE_IDENTIFIER_KIND_UNIX_DEVICE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE")]
pub static FILE_ATTRIBUTE_ACCESS_CAN_DELETE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE")]
pub static FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ACCESS_CAN_READ")]
pub static FILE_ATTRIBUTE_ACCESS_CAN_READ: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ACCESS_CAN_READ)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME")]
pub static FILE_ATTRIBUTE_ACCESS_CAN_RENAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH")]
pub static FILE_ATTRIBUTE_ACCESS_CAN_TRASH: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE")]
pub static FILE_ATTRIBUTE_ACCESS_CAN_WRITE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE")]
pub static FILE_ATTRIBUTE_DOS_IS_ARCHIVE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_60", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_60")))]
#[doc(alias = "G_FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT")]
pub static FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_DOS_IS_SYSTEM")]
pub static FILE_ATTRIBUTE_DOS_IS_SYSTEM: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_DOS_IS_SYSTEM)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_60", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_60")))]
#[doc(alias = "G_FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG")]
pub static FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ETAG_VALUE")]
pub static FILE_ATTRIBUTE_ETAG_VALUE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ETAG_VALUE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_FREE")]
pub static FILE_ATTRIBUTE_FILESYSTEM_FREE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_FREE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_READONLY")]
pub static FILE_ATTRIBUTE_FILESYSTEM_READONLY: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_READONLY)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE")]
pub static FILE_ATTRIBUTE_FILESYSTEM_REMOTE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_SIZE")]
pub static FILE_ATTRIBUTE_FILESYSTEM_SIZE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_SIZE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_TYPE")]
pub static FILE_ATTRIBUTE_FILESYSTEM_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_USED")]
pub static FILE_ATTRIBUTE_FILESYSTEM_USED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_USED)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW")]
pub static FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_GVFS_BACKEND")]
pub static FILE_ATTRIBUTE_GVFS_BACKEND: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_GVFS_BACKEND)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ID_FILE")]
pub static FILE_ATTRIBUTE_ID_FILE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ID_FILE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_ID_FILESYSTEM")]
pub static FILE_ATTRIBUTE_ID_FILESYSTEM: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_ID_FILESYSTEM)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_START: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT")]
pub static FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI")]
pub static FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC")]
pub static FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE")]
pub static FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE")]
pub static FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE")]
pub static FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_OWNER_GROUP")]
pub static FILE_ATTRIBUTE_OWNER_GROUP: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_OWNER_GROUP)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_OWNER_USER")]
pub static FILE_ATTRIBUTE_OWNER_USER: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_OWNER_USER)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_OWNER_USER_REAL")]
pub static FILE_ATTRIBUTE_OWNER_USER_REAL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_OWNER_USER_REAL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_PREVIEW_ICON")]
pub static FILE_ATTRIBUTE_PREVIEW_ICON: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_PREVIEW_ICON)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_RECENT_MODIFIED")]
pub static FILE_ATTRIBUTE_RECENT_MODIFIED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_RECENT_MODIFIED)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_SELINUX_CONTEXT")]
pub static FILE_ATTRIBUTE_SELINUX_CONTEXT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_SELINUX_CONTEXT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE")]
pub static FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE")]
pub static FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_COPY_NAME")]
pub static FILE_ATTRIBUTE_STANDARD_COPY_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_COPY_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION")]
pub static FILE_ATTRIBUTE_STANDARD_DESCRIPTION: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME")]
pub static FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME")]
pub static FILE_ATTRIBUTE_STANDARD_EDIT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE")]
pub static FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_ICON")]
pub static FILE_ATTRIBUTE_STANDARD_ICON: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_ICON)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP")]
pub static FILE_ATTRIBUTE_STANDARD_IS_BACKUP: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN")]
pub static FILE_ATTRIBUTE_STANDARD_IS_HIDDEN: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK")]
pub static FILE_ATTRIBUTE_STANDARD_IS_SYMLINK: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL")]
pub static FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE")]
pub static FILE_ATTRIBUTE_STANDARD_IS_VOLATILE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_NAME")]
pub static FILE_ATTRIBUTE_STANDARD_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_SIZE")]
pub static FILE_ATTRIBUTE_STANDARD_SIZE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_SIZE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER")]
pub static FILE_ATTRIBUTE_STANDARD_SORT_ORDER: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON")]
pub static FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET")]
pub static FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_TARGET_URI")]
pub static FILE_ATTRIBUTE_STANDARD_TARGET_URI: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_TARGET_URI)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_STANDARD_TYPE")]
pub static FILE_ATTRIBUTE_STANDARD_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_STANDARD_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_THUMBNAILING_FAILED")]
pub static FILE_ATTRIBUTE_THUMBNAILING_FAILED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_THUMBNAILING_FAILED)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID")]
pub static FILE_ATTRIBUTE_THUMBNAIL_IS_VALID: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_THUMBNAIL_PATH")]
pub static FILE_ATTRIBUTE_THUMBNAIL_PATH: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_THUMBNAIL_PATH)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_ACCESS")]
pub static FILE_ATTRIBUTE_TIME_ACCESS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_ACCESS)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_74", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_74")))]
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_ACCESS_NSEC")]
pub static FILE_ATTRIBUTE_TIME_ACCESS_NSEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_ACCESS_NSEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_ACCESS_USEC")]
pub static FILE_ATTRIBUTE_TIME_ACCESS_USEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_ACCESS_USEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_CHANGED")]
pub static FILE_ATTRIBUTE_TIME_CHANGED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_CHANGED)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_74", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_74")))]
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_CHANGED_NSEC")]
pub static FILE_ATTRIBUTE_TIME_CHANGED_NSEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_CHANGED_NSEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_CHANGED_USEC")]
pub static FILE_ATTRIBUTE_TIME_CHANGED_USEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_CHANGED_USEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_CREATED")]
pub static FILE_ATTRIBUTE_TIME_CREATED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_CREATED)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_74", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_74")))]
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_CREATED_NSEC")]
pub static FILE_ATTRIBUTE_TIME_CREATED_NSEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_CREATED_NSEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_CREATED_USEC")]
pub static FILE_ATTRIBUTE_TIME_CREATED_USEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_CREATED_USEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_MODIFIED")]
pub static FILE_ATTRIBUTE_TIME_MODIFIED: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_MODIFIED)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_74", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_74")))]
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_MODIFIED_NSEC")]
pub static FILE_ATTRIBUTE_TIME_MODIFIED_NSEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_MODIFIED_NSEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC")]
pub static FILE_ATTRIBUTE_TIME_MODIFIED_USEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TRASH_DELETION_DATE")]
pub static FILE_ATTRIBUTE_TRASH_DELETION_DATE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TRASH_DELETION_DATE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT")]
pub static FILE_ATTRIBUTE_TRASH_ITEM_COUNT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_TRASH_ORIG_PATH")]
pub static FILE_ATTRIBUTE_TRASH_ORIG_PATH: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_TRASH_ORIG_PATH)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_BLOCKS")]
pub static FILE_ATTRIBUTE_UNIX_BLOCKS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_BLOCKS)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE")]
pub static FILE_ATTRIBUTE_UNIX_BLOCK_SIZE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_DEVICE")]
pub static FILE_ATTRIBUTE_UNIX_DEVICE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_DEVICE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_GID")]
pub static FILE_ATTRIBUTE_UNIX_GID: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_GID)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_INODE")]
pub static FILE_ATTRIBUTE_UNIX_INODE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_INODE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT")]
pub static FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_MODE")]
pub static FILE_ATTRIBUTE_UNIX_MODE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_MODE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_NLINK")]
pub static FILE_ATTRIBUTE_UNIX_NLINK: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_NLINK)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_RDEV")]
pub static FILE_ATTRIBUTE_UNIX_RDEV: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_RDEV)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_FILE_ATTRIBUTE_UNIX_UID")]
pub static FILE_ATTRIBUTE_UNIX_UID: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_FILE_ATTRIBUTE_UNIX_UID)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_64", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_64")))]
#[doc(alias = "G_MEMORY_MONITOR_EXTENSION_POINT_NAME")]
pub static MEMORY_MONITOR_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MEMORY_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_MENU_ATTRIBUTE_ACTION")]
pub static MENU_ATTRIBUTE_ACTION: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_ATTRIBUTE_ACTION)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_MENU_ATTRIBUTE_ACTION_NAMESPACE")]
pub static MENU_ATTRIBUTE_ACTION_NAMESPACE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_ATTRIBUTE_ACTION_NAMESPACE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_MENU_ATTRIBUTE_ICON")]
pub static MENU_ATTRIBUTE_ICON: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_ATTRIBUTE_ICON).to_str().unwrap()
    });
#[doc(alias = "G_MENU_ATTRIBUTE_LABEL")]
pub static MENU_ATTRIBUTE_LABEL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_ATTRIBUTE_LABEL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_MENU_ATTRIBUTE_TARGET")]
pub static MENU_ATTRIBUTE_TARGET: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_ATTRIBUTE_TARGET)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_MENU_LINK_SECTION")]
pub static MENU_LINK_SECTION: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_LINK_SECTION).to_str().unwrap()
    });
#[doc(alias = "G_MENU_LINK_SUBMENU")]
pub static MENU_LINK_SUBMENU: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_MENU_LINK_SUBMENU).to_str().unwrap()
    });
#[doc(alias = "G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME")]
pub static NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_NETWORK_MONITOR_EXTENSION_POINT_NAME")]
pub static NETWORK_MONITOR_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_NETWORK_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[cfg(any(feature = "v2_70", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_70")))]
#[doc(alias = "G_POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME")]
pub static POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_PROXY_EXTENSION_POINT_NAME")]
pub static PROXY_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_PROXY_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_PROXY_RESOLVER_EXTENSION_POINT_NAME")]
pub static PROXY_RESOLVER_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_PROXY_RESOLVER_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_SETTINGS_BACKEND_EXTENSION_POINT_NAME")]
pub static SETTINGS_BACKEND_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_SETTINGS_BACKEND_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_TLS_BACKEND_EXTENSION_POINT_NAME")]
pub static TLS_BACKEND_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_TLS_BACKEND_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT")]
pub static TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER")]
pub static TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VFS_EXTENSION_POINT_NAME")]
pub static VFS_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VFS_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VOLUME_IDENTIFIER_KIND_CLASS")]
pub static VOLUME_IDENTIFIER_KIND_CLASS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_IDENTIFIER_KIND_CLASS)
            .to_str()
            .unwrap()
    });
#[cfg_attr(feature = "v2_58", deprecated = "Since 2.58")]
#[doc(alias = "G_VOLUME_IDENTIFIER_KIND_HAL_UDI")]
pub static VOLUME_IDENTIFIER_KIND_HAL_UDI: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_IDENTIFIER_KIND_HAL_UDI)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VOLUME_IDENTIFIER_KIND_LABEL")]
pub static VOLUME_IDENTIFIER_KIND_LABEL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_IDENTIFIER_KIND_LABEL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT")]
pub static VOLUME_IDENTIFIER_KIND_NFS_MOUNT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE")]
pub static VOLUME_IDENTIFIER_KIND_UNIX_DEVICE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VOLUME_IDENTIFIER_KIND_UUID")]
pub static VOLUME_IDENTIFIER_KIND_UUID: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_IDENTIFIER_KIND_UUID)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_VOLUME_MONITOR_EXTENSION_POINT_NAME")]
pub static VOLUME_MONITOR_EXTENSION_POINT_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_VOLUME_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    });
