// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files.git)
// DO NOT EDIT

#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
mod about_window;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::about_window::AboutWindow;

mod action_row;
pub use self::action_row::ActionRow;

mod animation;
pub use self::animation::Animation;

mod animation_target;
pub use self::animation_target::AnimationTarget;

mod application;
pub use self::application::Application;

mod application_window;
pub use self::application_window::ApplicationWindow;

mod avatar;
pub use self::avatar::Avatar;

mod bin;
pub use self::bin::Bin;

mod button_content;
pub use self::button_content::ButtonContent;

mod callback_animation_target;
pub use self::callback_animation_target::CallbackAnimationTarget;

mod carousel;
pub use self::carousel::Carousel;

mod carousel_indicator_dots;
pub use self::carousel_indicator_dots::CarouselIndicatorDots;

mod carousel_indicator_lines;
pub use self::carousel_indicator_lines::CarouselIndicatorLines;

mod clamp;
pub use self::clamp::Clamp;

mod clamp_layout;
pub use self::clamp_layout::ClampLayout;

mod clamp_scrollable;
pub use self::clamp_scrollable::ClampScrollable;

mod combo_row;
pub use self::combo_row::ComboRow;

#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
mod entry_row;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::entry_row::EntryRow;

mod enum_list_item;
pub use self::enum_list_item::EnumListItem;

mod enum_list_model;
pub use self::enum_list_model::EnumListModel;

mod expander_row;
pub use self::expander_row::ExpanderRow;

mod flap;
pub use self::flap::Flap;

mod header_bar;
pub use self::header_bar::HeaderBar;

mod leaflet;
pub use self::leaflet::Leaflet;

mod leaflet_page;
pub use self::leaflet_page::LeafletPage;

#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
mod message_dialog;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::message_dialog::MessageDialog;

#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
mod password_entry_row;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::password_entry_row::PasswordEntryRow;

mod preferences_group;
pub use self::preferences_group::PreferencesGroup;

mod preferences_page;
pub use self::preferences_page::PreferencesPage;

mod preferences_row;
pub use self::preferences_row::PreferencesRow;

mod preferences_window;
pub use self::preferences_window::PreferencesWindow;

#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
mod property_animation_target;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::property_animation_target::PropertyAnimationTarget;

mod split_button;
pub use self::split_button::SplitButton;

mod spring_animation;
pub use self::spring_animation::SpringAnimation;

mod squeezer;
pub use self::squeezer::Squeezer;

mod squeezer_page;
pub use self::squeezer_page::SqueezerPage;

mod status_page;
pub use self::status_page::StatusPage;

mod style_manager;
pub use self::style_manager::StyleManager;

mod swipe_tracker;
pub use self::swipe_tracker::SwipeTracker;

mod swipeable;
pub use self::swipeable::Swipeable;

mod tab_bar;
pub use self::tab_bar::TabBar;

#[cfg(any(feature = "v1_3", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_3")))]
mod tab_button;
#[cfg(any(feature = "v1_3", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_3")))]
pub use self::tab_button::TabButton;

#[cfg(any(feature = "v1_3", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_3")))]
mod tab_overview;
#[cfg(any(feature = "v1_3", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_3")))]
pub use self::tab_overview::TabOverview;

mod tab_page;
pub use self::tab_page::TabPage;

mod tab_view;
pub use self::tab_view::TabView;

mod timed_animation;
pub use self::timed_animation::TimedAnimation;

mod toast;
pub use self::toast::Toast;

mod toast_overlay;
pub use self::toast_overlay::ToastOverlay;

mod view_stack;
pub use self::view_stack::ViewStack;

mod view_stack_page;
pub use self::view_stack_page::ViewStackPage;

mod view_switcher;
pub use self::view_switcher::ViewSwitcher;

mod view_switcher_bar;
pub use self::view_switcher_bar::ViewSwitcherBar;

mod view_switcher_title;
pub use self::view_switcher_title::ViewSwitcherTitle;

mod window;
pub use self::window::Window;

mod window_title;
pub use self::window_title::WindowTitle;

mod spring_params;
pub use self::spring_params::SpringParams;

mod enums;
pub use self::enums::AnimationState;
pub use self::enums::CenteringPolicy;
pub use self::enums::ColorScheme;
pub use self::enums::Easing;
pub use self::enums::FlapFoldPolicy;
pub use self::enums::FlapTransitionType;
pub use self::enums::FoldThresholdPolicy;
pub use self::enums::LeafletTransitionType;
pub use self::enums::NavigationDirection;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::enums::ResponseAppearance;
pub use self::enums::SqueezerTransitionType;
pub use self::enums::ToastPriority;
pub use self::enums::ViewSwitcherPolicy;

mod flags;
#[cfg(any(feature = "v1_2", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
pub use self::flags::TabViewShortcuts;

pub mod functions;

#[doc(hidden)]
pub mod traits {
    pub use super::action_row::ActionRowExt;
    pub use super::animation::AnimationExt;
    pub use super::application::AdwApplicationExt;
    pub use super::application_window::AdwApplicationWindowExt;
    pub use super::bin::BinExt;
    pub use super::combo_row::ComboRowExt;
    #[cfg(any(feature = "v1_2", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
    pub use super::entry_row::EntryRowExt;
    pub use super::expander_row::ExpanderRowExt;
    #[cfg(any(feature = "v1_2", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
    pub use super::message_dialog::MessageDialogExt;
    pub use super::preferences_group::PreferencesGroupExt;
    pub use super::preferences_page::PreferencesPageExt;
    pub use super::preferences_row::PreferencesRowExt;
    pub use super::preferences_window::PreferencesWindowExt;
    pub use super::swipeable::SwipeableExt;
    pub use super::window::AdwWindowExt;
}
#[doc(hidden)]
pub mod builders {
    #[cfg(any(feature = "v1_2", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
    pub use super::about_window::AboutWindowBuilder;
    pub use super::action_row::ActionRowBuilder;
    pub use super::application::ApplicationBuilder;
    pub use super::application_window::ApplicationWindowBuilder;
    pub use super::avatar::AvatarBuilder;
    pub use super::bin::BinBuilder;
    pub use super::button_content::ButtonContentBuilder;
    pub use super::carousel::CarouselBuilder;
    pub use super::carousel_indicator_dots::CarouselIndicatorDotsBuilder;
    pub use super::carousel_indicator_lines::CarouselIndicatorLinesBuilder;
    pub use super::clamp::ClampBuilder;
    pub use super::clamp_layout::ClampLayoutBuilder;
    pub use super::clamp_scrollable::ClampScrollableBuilder;
    pub use super::combo_row::ComboRowBuilder;
    #[cfg(any(feature = "v1_2", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
    pub use super::entry_row::EntryRowBuilder;
    pub use super::expander_row::ExpanderRowBuilder;
    pub use super::flap::FlapBuilder;
    pub use super::header_bar::HeaderBarBuilder;
    pub use super::leaflet::LeafletBuilder;
    #[cfg(any(feature = "v1_2", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
    pub use super::message_dialog::MessageDialogBuilder;
    #[cfg(any(feature = "v1_2", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_2")))]
    pub use super::password_entry_row::PasswordEntryRowBuilder;
    pub use super::preferences_group::PreferencesGroupBuilder;
    pub use super::preferences_page::PreferencesPageBuilder;
    pub use super::preferences_row::PreferencesRowBuilder;
    pub use super::preferences_window::PreferencesWindowBuilder;
    pub use super::split_button::SplitButtonBuilder;
    pub use super::spring_animation::SpringAnimationBuilder;
    pub use super::squeezer::SqueezerBuilder;
    pub use super::status_page::StatusPageBuilder;
    pub use super::swipe_tracker::SwipeTrackerBuilder;
    pub use super::tab_bar::TabBarBuilder;
    #[cfg(any(feature = "v1_3", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_3")))]
    pub use super::tab_button::TabButtonBuilder;
    #[cfg(any(feature = "v1_3", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_3")))]
    pub use super::tab_overview::TabOverviewBuilder;
    pub use super::tab_view::TabViewBuilder;
    pub use super::timed_animation::TimedAnimationBuilder;
    pub use super::toast::ToastBuilder;
    pub use super::view_stack::ViewStackBuilder;
    pub use super::view_switcher::ViewSwitcherBuilder;
    pub use super::view_switcher_bar::ViewSwitcherBarBuilder;
    pub use super::view_switcher_title::ViewSwitcherTitleBuilder;
    pub use super::window::WindowBuilder;
    pub use super::window_title::WindowTitleBuilder;
}
