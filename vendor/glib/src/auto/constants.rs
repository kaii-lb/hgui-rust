// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use std::ffi::CStr;

#[doc(alias = "G_CSET_A_2_Z")]
pub static CSET_A_2_Z: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe { CStr::from_ptr(ffi::G_CSET_A_2_Z).to_str().unwrap() });
#[doc(alias = "G_CSET_DIGITS")]
pub static CSET_DIGITS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe { CStr::from_ptr(ffi::G_CSET_DIGITS).to_str().unwrap() });
#[doc(alias = "G_CSET_a_2_z")]
pub static CSET_a_2_z: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe { CStr::from_ptr(ffi::G_CSET_a_2_z).to_str().unwrap() });
#[doc(alias = "G_KEY_FILE_DESKTOP_GROUP")]
pub static KEY_FILE_DESKTOP_GROUP: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_GROUP)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_ACTIONS")]
pub static KEY_FILE_DESKTOP_KEY_ACTIONS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_ACTIONS)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_CATEGORIES")]
pub static KEY_FILE_DESKTOP_KEY_CATEGORIES: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_CATEGORIES)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_COMMENT")]
pub static KEY_FILE_DESKTOP_KEY_COMMENT: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_COMMENT)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE")]
pub static KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_EXEC")]
pub static KEY_FILE_DESKTOP_KEY_EXEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_EXEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME")]
pub static KEY_FILE_DESKTOP_KEY_GENERIC_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_HIDDEN")]
pub static KEY_FILE_DESKTOP_KEY_HIDDEN: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_HIDDEN)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_ICON")]
pub static KEY_FILE_DESKTOP_KEY_ICON: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_ICON)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_MIME_TYPE")]
pub static KEY_FILE_DESKTOP_KEY_MIME_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_MIME_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_NAME")]
pub static KEY_FILE_DESKTOP_KEY_NAME: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_NAME)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN")]
pub static KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY")]
pub static KEY_FILE_DESKTOP_KEY_NO_DISPLAY: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN")]
pub static KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_PATH")]
pub static KEY_FILE_DESKTOP_KEY_PATH: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_PATH)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY")]
pub static KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS")]
pub static KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_TERMINAL")]
pub static KEY_FILE_DESKTOP_KEY_TERMINAL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_TERMINAL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_TRY_EXEC")]
pub static KEY_FILE_DESKTOP_KEY_TRY_EXEC: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_TRY_EXEC)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_TYPE")]
pub static KEY_FILE_DESKTOP_KEY_TYPE: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_TYPE)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_URL")]
pub static KEY_FILE_DESKTOP_KEY_URL: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_URL)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_KEY_VERSION")]
pub static KEY_FILE_DESKTOP_KEY_VERSION: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_KEY_VERSION)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_TYPE_APPLICATION")]
pub static KEY_FILE_DESKTOP_TYPE_APPLICATION: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_TYPE_APPLICATION)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_TYPE_DIRECTORY")]
pub static KEY_FILE_DESKTOP_TYPE_DIRECTORY: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_TYPE_DIRECTORY)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_KEY_FILE_DESKTOP_TYPE_LINK")]
pub static KEY_FILE_DESKTOP_TYPE_LINK: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_KEY_FILE_DESKTOP_TYPE_LINK)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_OPTION_REMAINING")]
pub static OPTION_REMAINING: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_OPTION_REMAINING).to_str().unwrap()
    });
#[doc(alias = "G_STR_DELIMITERS")]
pub static STR_DELIMITERS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_STR_DELIMITERS).to_str().unwrap()
    });
#[cfg(any(feature = "v2_60", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2_60")))]
#[doc(alias = "G_TEST_OPTION_ISOLATE_DIRS")]
pub static TEST_OPTION_ISOLATE_DIRS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_TEST_OPTION_ISOLATE_DIRS)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_URI_RESERVED_CHARS_GENERIC_DELIMITERS")]
pub static URI_RESERVED_CHARS_GENERIC_DELIMITERS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_URI_RESERVED_CHARS_GENERIC_DELIMITERS)
            .to_str()
            .unwrap()
    });
#[doc(alias = "G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS")]
pub static URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS: once_cell::sync::Lazy<&'static str> =
    once_cell::sync::Lazy::new(|| unsafe {
        CStr::from_ptr(ffi::G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS)
            .to_str()
            .unwrap()
    });
